<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{A6A56926-C03F-4365-BDB2-54D6A34CE211}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Test</RootNamespace>
    <AssemblyName>Test</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="nunit.framework">
      <HintPath>..\..\packages\NUnit.2.6.3\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="input1.json\1 singlerun true\Style.cs" />
    <Compile Include="input1.json\1_1 add custom to reporters and output only array\Style.cs" />
    <Compile Include="input1.json\1_1 add custom to reporters\Style.cs" />
    <Compile Include="input1.json\1_1 add key at the end of file\Style.cs" />
    <Compile Include="input1.json\1_1 custom key and colors key\Style.cs" />
    <Compile Include="input1.json\1_1 only keys with value 500\Style.cs" />
    <Compile Include="input1.json\1_1 output plugins separated by comma 2\Style.cs" />
    <Compile Include="input1.json\1_1 output plugins separated by comma\Style.cs" />
    <Compile Include="input1.json\1_1 output plugins with key\Style.cs" />
    <Compile Include="input1.json\1_1 output plugins without key\Style.cs" />
    <Compile Include="input1.json\1_1 output reporters and plugins as two lists\Style.cs" />
    <Compile Include="input1.json\1_1 pack elements in arrays\Style.cs" />
    <Compile Include="input1.json\1_1 remove commonjs from all arrays\Style.cs" />
    <Compile Include="input1.json\1_1 remove every array containing commonjs\Style.cs" />
    <Compile Include="input1.json\1_1 replace commonjs with amd only in frameworks\Style.cs" />
    <Compile Include="input1.json\1_1 reportes and plugins under common key 2\Style.cs" />
    <Compile Include="input1.json\1_1 reportes and plugins under common key\Style.cs" />
    <Compile Include="input1.json\1_2 config\Style.cs" />
    <Compile Include="input1.json\1_1 add key at the end of file 2\Style.cs" />
    <Compile Include="input2.json\2 change id to file2\Style.cs" />
    <Compile Include="input2.json\2 remove the Close menu item\Style.cs" />
    <Compile Include="input2.json\2 rename menuitem to menuitems 2\Style.cs" />
    <Compile Include="input2.json\2 rename menuitem to menuitems\Style.cs" />
    <Compile Include="input2.json\2 replace Open menu item with Export 2\Style.cs" />
    <Compile Include="input2.json\2 replace Open menu item with Export\Style.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Builder.cs" />
    <Compile Include="Runner.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="input1.json\input1.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="input2.json\input2.json" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="input1.json\1 singlerun true\output.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="input1.json\1_1 add custom to reporters and output only array\output.txt" />
    <Content Include="input1.json\1_1 add custom to reporters\output.txt" />
    <Content Include="input1.json\1_1 add key at the end of file 2\output.txt" />
    <Content Include="input1.json\1_1 add key at the end of file\output.txt" />
    <Content Include="input1.json\1_1 custom key and colors key\output.txt" />
    <Content Include="input1.json\1_1 only keys with value 500\output.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="input1.json\1_1 output plugins separated by comma 2\output.txt" />
    <Content Include="input1.json\1_1 output plugins separated by comma\output.txt" />
    <Content Include="input1.json\1_1 output plugins with key\output.txt" />
    <Content Include="input1.json\1_1 output plugins without key\output.txt" />
    <Content Include="input1.json\1_1 output reporters and plugins as two lists\output.txt" />
    <Content Include="input1.json\1_1 pack elements in arrays\output.txt" />
    <Content Include="input1.json\1_1 remove commonjs from all arrays\output.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="input1.json\1_1 remove every array containing commonjs\output.txt" />
    <Content Include="input1.json\1_1 replace commonjs with amd only in frameworks\output.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="input1.json\1_1 reportes and plugins under common key 2\output.txt" />
    <Content Include="input1.json\1_1 reportes and plugins under common key\output.txt" />
    <Content Include="input1.json\1_2 config\output.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="input2.json\2 change id to file2\output.txt" />
    <Content Include="input2.json\2 remove the Close menu item\output.txt" />
    <Content Include="input2.json\2 rename menuitem to menuitems 2\output.txt" />
    <Content Include="input2.json\2 rename menuitem to menuitems\output.txt" />
    <Content Include="input2.json\2 replace Open menu item with Export 2\output.txt" />
    <Content Include="input2.json\2 replace Open menu item with Export\output.txt" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\LambdastylePrototype.csproj">
      <Project>{7b2302d4-d60f-40d1-ba6f-a970d3baf9f7}</Project>
      <Name>LambdastylePrototype</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>